'use client';

import React, { useState } from 'react';
import { Container, Typography, Paper, Alert, Box } from '@mui/material';
import { 
  FilterAlt, 
  FilterList, 
  LocalGasStation, 
  AirlineStops,
} from '@mui/icons-material';
import Cascader, { Category, CascaderValue } from './index';

// D·ªØ li·ªáu m·∫´u gi·ªëng nh∆∞ trong h√¨nh - c√°c lo·∫°i b·ªô l·ªçc √¥ t√¥
const filterCategories: Category[] = [
  // Danh m·ª•c cha
  { 
    id: 1, 
    name: 'B·ªô L·ªçc D·∫ßu', 
    // icon: <FilterAlt />,
    description: 'B·ªô l·ªçc d·∫ßu ƒë·ªông c∆° v√† h·ªôp s·ªë'
  },
  { 
    id: 2, 
    name: 'B·ªô L·ªçc Kh√¥ng Kh√≠', 
    icon: <AirlineStops />,
    description: 'B·ªô l·ªçc kh√¥ng kh√≠ ƒë·ªông c∆° v√† cabin'
  },
  { 
    id: 3, 
    name: 'B·ªô L·ªçc Nhi√™n Li·ªáu', 
    icon: <LocalGasStation />,
    description: 'B·ªô l·ªçc xƒÉng v√† d·∫ßu diesel'
  },
  { 
    id: 4, 
    name: 'B·ªô L·ªçc Trong Cabin', 
    icon: <FilterList />,
    description: 'L·ªçc kh√¥ng kh√≠ trong khoang l√°i'
  },
  { 
    id: 5, 
    name: 'B·ªô L·ªçc Kh√¥ng Kh√≠', 
    icon: <FilterList />,
    description: 'L·ªçc kh√¥ng kh√≠ trong khoang l√°i'
  },
  { 
    id: 6, 
    name: 'B·ªô L·ªçc Trong Cabin', 
    icon: <FilterList />,
    description: 'L·ªçc kh√¥ng kh√≠ trong khoang l√°i'
  },
  { 
    id: 7, 
    name: 'B·ªô L·ªçc Nhi√™n Li·ªáu', 
    icon: <LocalGasStation />,
    description: 'B·ªô l·ªçc xƒÉng v√† d·∫ßu diesel'
  },
  { 
    id: 8, 
    name: 'B·ªô L·ªçc Kh√¥ng Kh√≠', 
    icon: <FilterList />,
    description: 'L·ªçc kh√¥ng kh√≠ trong khoang l√°i'
  },

  // Danh m·ª•c con c·ªßa "B·ªô L·ªçc D·∫ßu"
  { 
    id: 11, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 1,
    description: 'Ph√π h·ª£p cho Chevrolet Cruze 2010-2016'
  },
  { 
    id: 12, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 1,
    description: 'Ph√π h·ª£p cho Toyota Camry 2012-2018'
  },
  { 
    id: 13, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 1,
    description: 'Ph√π h·ª£p cho Mercedes C-Class W204'
  },
  { 
    id: 14, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 1,
    description: 'Ph√π h·ª£p cho BMW 3 Series F30'
  },
  { 
    id: 15, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 1,
    description: 'Ph√π h·ª£p cho BMW 3 Series F30'
  },
  { 
    id: 16, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 1,
    description: 'Ph√π h·ª£p cho BMW 3 Series F30'
  },

  // Danh m·ª•c con c·ªßa "B·ªô L·ªçc Kh√¥ng Kh√≠"
  { 
    id: 11, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 2,
    description: 'Ph√π h·ª£p cho Chevrolet Cruze 2010-2016'
  },
  { 
    id: 12, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 2,
    description: 'Ph√π h·ª£p cho Toyota Camry 2012-2018'
  },
  { 
    id: 13, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 2,
    description: 'Ph√π h·ª£p cho Mercedes C-Class W204'
  },
  { 
    id: 14, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 2,
    description: 'Ph√π h·ª£p cho BMW 3 Series F30'
  },
  { 
    id: 15, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 2,
    description: 'Ph√π h·ª£p cho BMW 3 Series F30'
  },
  { 
    id: 16, 
    name: 'B·ªô l·ªçc gi√≥', 
    parentId: 2,
    description: 'Ph√π h·ª£p cho BMW 3 Series F30'
  },


  // Danh m·ª•c con c·ªßa "B·ªô L·ªçc Nhi√™n Li·ªáu"
  { 
    id: 31, 
    name: 'L·ªçc xƒÉng - Nissan Altima', 
    parentId: 3,
    description: 'B·ªô l·ªçc xƒÉng cho Nissan Altima 2013-2018'
  },
  { 
    id: 32, 
    name: 'L·ªçc d·∫ßu diesel - Volkswagen Jetta', 
    parentId: 3,
    description: 'B·ªô l·ªçc diesel cho VW Jetta TDI'
  },
  { 
    id: 33, 
    name: 'L·ªçc nhi√™n li·ªáu - Audi A4', 
    parentId: 3,
    description: 'Ph√π h·ª£p cho Audi A4 B8/B9'
  },

  // Danh m·ª•c con c·ªßa "B·ªô L·ªçc Trong Cabin"
  { 
    id: 41, 
    name: 'L·ªçc cabin than ho·∫°t t√≠nh - Lexus ES', 
    parentId: 4,
    description: 'L·ªçc than ho·∫°t t√≠nh cho Lexus ES 2013-2018'
  },
  { 
    id: 42, 
    name: 'L·ªçc cabin HEPA - Tesla Model 3', 
    parentId: 4,
    description: 'B·ªô l·ªçc HEPA cho Tesla Model 3'
  },
];

const CascaderDemo: React.FC = () => {
  const [selectedValue, setSelectedValue] = useState<CascaderValue>({
    parentCategory: null,
    childCategory: null,
  });

  return (
    <Container maxWidth="xl" className="py-8">
      <Typography variant="h4" component="h1" className="mb-6 text-center font-bold">
        üöó Demo Cascader Hover Navigation - Danh M·ª•c B·ªô L·ªçc √î T√¥
      </Typography>

      <Alert severity="success" className="mb-6">
        <strong>‚ú® T√≠nh nƒÉng m·ªõi:</strong> Hover v√†o danh m·ª•c cha ƒë·ªÉ ch·ªçn ngay l·∫≠p t·ª©c v√† xem danh m·ª•c con. 
        M·∫∑c ƒë·ªãnh s·∫Ω ch·ªçn danh m·ª•c cha ƒë·∫ßu ti√™n khi load!
      </Alert>

      {/* Component Cascader ch√≠nh */}
      <Paper className="p-6 mb-8" elevation={2}>
        <Typography variant="h6" className="mb-4 text-blue-600">
          üè∑Ô∏è Cascader Auto-Select on Hover
        </Typography>
        
        <Typography variant="body2" className="mb-4 text-gray-600">
          üí° <strong>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:</strong>
        </Typography>
        <ul className="mb-4 text-sm text-gray-600 space-y-1">
          <li>‚Ä¢ <strong>Auto-select:</strong> M·∫∑c ƒë·ªãnh ch·ªçn danh m·ª•c cha ƒë·∫ßu ti√™n khi load</li>
          <li>‚Ä¢ <strong>Hover to select:</strong> Hover v√†o danh m·ª•c cha ƒë·ªÉ ch·ªçn ngay</li>
          <li>‚Ä¢ <strong>Click con:</strong> Click v√†o danh m·ª•c con ƒë·ªÉ ho√†n t·∫•t l·ª±a ch·ªçn</li>
          <li>‚Ä¢ <strong>Real-time:</strong> Th·∫•y ngay danh m·ª•c con khi hover</li>
        </ul>
        
        <Cascader
          categories={filterCategories}
          value={selectedValue}
          onChange={setSelectedValue}
          sidebarWidth={320}
          showIcons={false}
          hoverDelay={0}
        />
      </Paper>

      {/* Hi·ªÉn th·ªã th√¥ng tin l·ª±a ch·ªçn hi·ªán t·∫°i */}
      <Paper className="p-6 bg-gray-50" elevation={1}>
        <Typography variant="h6" className="mb-4 text-green-600">
          üìä Th√¥ng tin l·ª±a ch·ªçn hi·ªán t·∫°i
        </Typography>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <Typography variant="subtitle2" className="mb-2 font-semibold">
              Gi√° tr·ªã tr·∫£ v·ªÅ:
            </Typography>
            <Box className="bg-white p-4 rounded-lg border">
              <pre className="text-sm text-gray-700 overflow-x-auto">
                {JSON.stringify({
                  parentCategory: selectedValue.parentCategory ? {
                    id: selectedValue.parentCategory.id,
                    name: selectedValue.parentCategory.name,
                    description: selectedValue.parentCategory.description,
                    // B·ªè icon ƒë·ªÉ tr√°nh circular reference
                  } : null,
                  childCategory: selectedValue.childCategory ? {
                    id: selectedValue.childCategory.id,
                    name: selectedValue.childCategory.name,
                    parentId: selectedValue.childCategory.parentId,
                    description: selectedValue.childCategory.description,
                    // B·ªè icon ƒë·ªÉ tr√°nh circular reference
                  } : null,
                }, null, 2)}
              </pre>
            </Box>
          </div>
          
          <div>
            <Typography variant="subtitle2" className="mb-2 font-semibold">
              Th√¥ng tin chi ti·∫øt:
            </Typography>
            <Box className="bg-white p-4 rounded-lg border space-y-2">
              <div>
                <strong>Danh m·ª•c ch√≠nh:</strong> {selectedValue.parentCategory?.name || 'Ch∆∞a ch·ªçn'}
              </div>
              <div>
                <strong>Danh m·ª•c con:</strong> {selectedValue.childCategory?.name || 'Ch∆∞a ch·ªçn'}
              </div>
              <div>
                <strong>M√¥ t·∫£:</strong> {
                  selectedValue.childCategory?.description || 
                  selectedValue.parentCategory?.description || 
                  'Kh√¥ng c√≥'
                }
              </div>
              {selectedValue.childCategory && (
                <div className="mt-3 p-2 bg-blue-50 rounded">
                  <strong className="text-blue-700">‚úÖ ƒê√£ ch·ªçn ho√†n t·∫•t:</strong>
                  <br />
                  <span className="text-blue-600">
                    {selectedValue.parentCategory?.name} ‚Üí {selectedValue.childCategory?.name}
                  </span>
                </div>
              )}
            </Box>
          </div>
        </div>
      </Paper>

      {/* Demo v·ªõi c√°c t√πy ch·ªçn kh√°c */}
      <Paper className="p-6 mt-8 bg-orange-50" elevation={1}>
        <Typography variant="h6" className="mb-4 text-orange-800">
          ‚öôÔ∏è T√πy ch·ªçn Component
        </Typography>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <Typography variant="subtitle2" className="mb-2 font-semibold">
              Props c√≥ th·ªÉ t√πy ch·ªânh:
            </Typography>
            <ul className="text-sm space-y-1">
              <li>‚Ä¢ <code>sidebarWidth</code>: ƒê·ªô r·ªông sidebar (px)</li>
              <li>‚Ä¢ <code>showIcons</code>: Hi·ªÉn th·ªã/·∫©n icon</li>
              <li>‚Ä¢ <code>hoverDelay</code>: ƒê·ªô tr·ªÖ hover (ms)</li>
              <li>‚Ä¢ <code>className</code>: CSS class t√πy ch·ªânh</li>
            </ul>
          </div>
          
          <div>
            <Typography variant="subtitle2" className="mb-2 font-semibold">
              T√≠nh nƒÉng UX:
            </Typography>
                         <ul className="text-sm space-y-1">
               <li>‚Ä¢ üöÄ <strong>Auto-select:</strong> Ch·ªçn t·ª± ƒë·ªông danh m·ª•c cha ƒë·∫ßu ti√™n</li>
               <li>‚Ä¢ ‚ö° <strong>Hover delay:</strong> Delay ng·∫Øn ƒë·ªÉ UX m∆∞·ª£t m√†</li>
               <li>‚Ä¢ üéØ <strong>Instant selection:</strong> Hover l√† ch·ªçn ngay</li>
               <li>‚Ä¢ üì± <strong>Responsive:</strong> Grid t·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh</li>
               <li>‚Ä¢ üîÑ <strong>Smart reset:</strong> Auto reset con khi ƒë·ªïi cha</li>
             </ul>
          </div>
        </div>
      </Paper>

      {/* H∆∞·ªõng d·∫´n t√≠ch h·ª£p */}
      <Paper className="p-6 mt-8 bg-blue-50" elevation={1}>
        <Typography variant="h6" className="mb-4 text-blue-800">
          üìñ H∆∞·ªõng d·∫´n t√≠ch h·ª£p
        </Typography>
        
        <div className="space-y-4 text-sm">
          <div>
            <strong>1. Import Component:</strong>
            <pre className="bg-white p-3 rounded mt-2 text-xs overflow-x-auto border">
{`import Cascader, { Category, CascaderValue } from '@/components/Cascader';`}
            </pre>
          </div>

          <div>
            <strong>2. C·∫•u tr√∫c d·ªØ li·ªáu Category:</strong>
            <pre className="bg-white p-3 rounded mt-2 text-xs overflow-x-auto border">
{`interface Category {
  id: string | number;
  name: string;
  parentId?: string | number | null; // null = danh m·ª•c cha
  icon?: React.ReactNode;             // Icon t√πy ch·ªçn
  description?: string;               // M√¥ t·∫£ hi·ªÉn th·ªã tr√™n card
}`}
            </pre>
          </div>

          <div>
            <strong>3. S·ª± ki·ªán onChange:</strong>
            <pre className="bg-white p-3 rounded mt-2 text-xs overflow-x-auto border">
{`const handleCategoryChange = (value: CascaderValue) => {
  console.log('Danh m·ª•c cha:', value.parentCategory);
  console.log('Danh m·ª•c con:', value.childCategory);
  
  // X·ª≠ l√Ω logic c·ªßa b·∫°n t·∫°i ƒë√¢y
  if (value.childCategory) {
    // User ƒë√£ ch·ªçn danh m·ª•c con c·ª• th·ªÉ
    loadProductsByCategory(value.childCategory.id);
  }
};`}
            </pre>
          </div>

                      <div>
             <strong>4. T√≠nh nƒÉng ch√≠nh:</strong>
             <ul className="list-disc list-inside mt-2 space-y-1 ml-4">
               <li>üöÄ <strong>Auto-select first:</strong> T·ª± ƒë·ªông ch·ªçn danh m·ª•c cha ƒë·∫ßu ti√™n khi load</li>
               <li>‚ö° <strong>Hover to select:</strong> Hover v√†o danh m·ª•c cha l√† ch·ªçn ngay l·∫≠p t·ª©c</li>
               <li>üìã <strong>Card Layout:</strong> Danh m·ª•c con hi·ªÉn th·ªã d·∫°ng card grid b√™n ph·∫£i</li>
               <li>üéØ <strong>Instant feedback:</strong> Th·∫•y ngay danh m·ª•c con khi hover</li>
               <li>üé® <strong>Smart selection:</strong> Reset danh m·ª•c con khi ƒë·ªïi danh m·ª•c cha</li>
               <li>üì± <strong>Responsive Grid:</strong> T·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh s·ªë c·ªôt theo m√†n h√¨nh</li>
             </ul>
           </div>
        </div>
      </Paper>
    </Container>
  );
};

export default CascaderDemo; 